apply plugin: 'java'
apply plugin: 'findbugs'
apply plugin: 'maven'

repositories {
    mavenCentral()
}

configurations {
    deployerJars
}


version = '1.2.3'


task fatJar(type: Jar) {
    manifest {
        attributes 'Implementation-Title': 'SoP API Client',
                'Implementation-Version': version
    }
    baseName = "sopapi-client"
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}


dependencies {
    compile project(':dtos')
    compile 'org.slf4j:slf4j-api:1.7.21'
    compile group: 'commons-cli', name: 'commons-cli', version: '1.3.1'
    compile group: 'org.asynchttpclient', name: 'async-http-client', version: '2.0.24'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.8.5'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.8.5'
    compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jdk8', version: '2.8.5'
    testCompile 'junit:junit:4.12'
    deployerJars "org.apache.maven.wagon:wagon-ftp:2.8"
}

findbugs {
    effort = "max"
    reportLevel = "low"
    sourceSets = [sourceSets.main]
}

tasks.withType(FindBugs) {
    reports {
        xml.enabled false
        html.enabled true
    }
}

test {
    testLogging.showStandardStreams = true
}

uploadArchives {
    repositories {
        mavenDeployer {
            configuration = configurations.deployerJars

            repository(url: "ftp://waws-prod-sn1-109.ftp.azurewebsites.windows.net/site/wwwroot/") {
                authentication(userName: "govlawtechmvnrepo\\\$govlawtechmvnrepo", password: System.getenv("mvnRepoFtpPassword"))
            }
        }
    }
}
